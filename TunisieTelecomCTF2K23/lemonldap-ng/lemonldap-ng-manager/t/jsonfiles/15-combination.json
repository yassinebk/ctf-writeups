[{
  "id": "generalParameters",
  "title": "generalParameters",
  "nodes": [{
    "_nodes": [{
      "default": "http://auth.example.com/",
      "id": "portal",
      "title": "portal",
      "data": "http://auth.example.com/"
    },
    {
      "_nodes": [{
        "_nodes": [{
          "default": 1,
          "id": "portalDisplayLogout",
          "title": "portalDisplayLogout",
          "type": "boolOrExpr"
        },
        {
          "default": "$_auth =~ /^(LDAP|DBI|Demo)$/",
          "id": "portalDisplayChangePassword",
          "title": "portalDisplayChangePassword",
          "type": "boolOrExpr"
        },
        {
          "default": 1,
          "id": "portalDisplayAppslist",
          "title": "portalDisplayAppslist",
          "type": "boolOrExpr"
        },
        {
          "default": 1,
          "id": "portalDisplayLoginHistory",
          "title": "portalDisplayLoginHistory",
          "type": "boolOrExpr"
        }],
        "id": "portalModules",
        "title": "portalModules",
        "type": "simpleInputContainer"
      },
      {
        "cnodes": "applicationList",
        "default": [{
          "data": {
            "catname": "Default category",
            "type": "category"
          },
          "id": "applicationList/default",
          "title": "default",
          "type": "catAndAppList"
        }],
        "help": "portalmenu.html#categories_and_applications",
        "id": "applicationList",
        "title": "applicationList",
        "type": "catAndAppList"
      }],
      "help": "portalmenu.html",
      "id": "portalMenu",
      "title": "portalMenu"
    },
    {
      "_nodes": [{
        "default": "bootstrap",
        "id": "portalSkin",
        "select": [{
          "k": "bootstrap",
          "v": "Bootstrap"
        },
        {
          "k": "pastel",
          "v": "Pastel"
        },
        {
          "k": "impact",
          "v": "Impact"
        },
        {
          "k": "dark",
          "v": "Dark"
        }],
        "title": "portalSkin",
        "type": "portalskin"
      },
      {
        "id": "portalSkinBackground",
        "select": [{
          "k": "",
          "v": "None"
        },
        {
          "k": "1280px-Anse_Source_d'Argent_2-La_Digue.jpg",
          "v": "Anse"
        },
        {
          "k": "1280px-Autumn-clear-water-waterfall-landscape_-_Virginia_-_ForestWander.jpg",
          "v": "Waterfall"
        },
        {
          "k": "1280px-BrockenSnowedTrees.jpg",
          "v": "Snowed Trees"
        },
        {
          "k": "1280px-Cedar_Breaks_National_Monument_partially.jpg",
          "v": "National Monument"
        },
        {
          "k": "1280px-Parry_Peak_from_Winter_Park.jpg",
          "v": "Winter"
        },
        {
          "k": "Aletschgletscher_mit_Pinus_cembra1.jpg",
          "v": "Pinus"
        }],
        "title": "portalSkinBackground",
        "type": "portalskinbackground"
      },
      {
        "cnodes": "portalSkinRules",
        "help": "portalcustom.html",
        "id": "portalSkinRules",
        "title": "portalSkinRules",
        "type": "keyTextContainer"
      },
      {
        "_nodes": [{
          "default": 1,
          "id": "portalCheckLogins",
          "title": "portalCheckLogins",
          "type": "bool"
        },
        {
          "default": 0,
          "id": "portalDisplayResetPassword",
          "title": "portalDisplayResetPassword",
          "type": "bool"
        },
        {
          "default": 1,
          "id": "portalDisplayRegister",
          "title": "portalDisplayRegister",
          "type": "bool"
        }],
        "id": "portalButtons",
        "title": "portalButtons",
        "type": "simpleInputContainer"
      },
      {
        "_nodes": [{
          "default": 1,
          "id": "portalRequireOldPassword",
          "title": "portalRequireOldPassword",
          "type": "bool"
        },
        {
          "default": 0,
          "id": "hideOldPassword",
          "title": "hideOldPassword",
          "type": "bool"
        },
        {
          "default": 0,
          "id": "mailOnPasswordChange",
          "title": "mailOnPasswordChange",
          "type": "bool"
        }],
        "id": "passwordManagement",
        "title": "passwordManagement",
        "type": "simpleInputContainer"
      },
      {
        "_nodes": [{
          "default": "_user",
          "help": "monitoring.html",
          "id": "portalUserAttr",
          "title": "portalUserAttr"
        },
        {
          "default": 0,
          "id": "portalOpenLinkInNewWindow",
          "title": "portalOpenLinkInNewWindow",
          "type": "bool"
        },
        {
          "default": 1,
          "id": "portalAntiFrame",
          "title": "portalAntiFrame",
          "type": "bool"
        },
        {
          "default": 60000,
          "id": "portalPingInterval",
          "title": "portalPingInterval",
          "type": "int"
        }],
        "id": "portalOther",
        "title": "portalOther",
        "type": "simpleInputContainer"
      }],
      "help": "portalcustom.html",
      "id": "portalCustomization",
      "title": "portalCustomization"
    },
    {
      "_nodes": [{
        "default": 0,
        "id": "captcha_login_enabled",
        "title": "captcha_login_enabled",
        "type": "bool"
      },
      {
        "default": 1,
        "id": "captcha_mail_enabled",
        "title": "captcha_mail_enabled",
        "type": "bool"
      },
      {
        "default": 1,
        "id": "captcha_register_enabled",
        "title": "captcha_register_enabled",
        "type": "bool"
      },
      {
        "default": 6,
        "id": "captcha_size",
        "title": "captcha_size",
        "type": "int"
      }],
      "help": "captcha.html",
      "id": "portalCaptcha",
      "title": "portalCaptcha"
    }],
    "help": "portal.html",
    "id": "portalParams",
    "title": "portalParams"
  },
  {
    "_nodes_filter": "authParams",
    "help": "start.html#authentication_users_and_password_databases",
    "id": "authParams",
    "title": "authParams",
    "type": "authParams",
    "nodes": [{
      "default": "Demo",
      "id": "authentication",
      "select": [{
        "k": "Apache",
        "v": "Apache"
      },
      {
        "k": "AD",
        "v": "Active Directory"
      },
      {
        "k": "DBI",
        "v": "Database (DBI)"
      },
      {
        "k": "Facebook",
        "v": "Facebook"
      },
      {
        "k": "Google",
        "v": "Google"
      },
      {
        "k": "LDAP",
        "v": "LDAP"
      },
      {
        "k": "Radius",
        "v": "Radius"
      },
      {
        "k": "SSL",
        "v": "SSL"
      },
      {
        "k": "Twitter",
        "v": "Twitter"
      },
      {
        "k": "WebID",
        "v": "WebID"
      },
      {
        "k": "Yubikey",
        "v": "Yubikey"
      },
      {
        "k": "Demo",
        "v": "Demonstration"
      },
      {
        "k": "Choice",
        "v": "authChoice"
      },
      {
        "k": "Combination",
        "v": "combineMods"
      },
      {
        "k": "CAS",
        "v": "Central Authentication Service (CAS)"
      },
      {
        "k": "OpenID",
        "v": "OpenID"
      },
      {
        "k": "OpenIDConnect",
        "v": "OpenID Connect"
      },
      {
        "k": "SAML",
        "v": "SAML v2"
      },
      {
        "k": "Proxy",
        "v": "Proxy"
      },
      {
        "k": "Remote",
        "v": "Remote"
      },
      {
        "k": "Slave",
        "v": "Slave"
      },
      {
        "k": "Null",
        "v": "None"
      }],
      "title": "authentication",
      "type": "select",
      "data": "Combination"
    },
    {
      "default": "Same",
      "id": "userDB",
      "select": [{
        "k": "Same",
        "v": "Same"
      },
      {
        "k": "AD",
        "v": "Active Directory"
      },
      {
        "k": "DBI",
        "v": "Database (DBI)"
      },
      {
        "k": "LDAP",
        "v": "LDAP"
      },
      {
        "k": "Null",
        "v": "None"
      }],
      "title": "userDB",
      "type": "select",
      "data": "Same"
    },
    {
      "default": "Demo",
      "id": "passwordDB",
      "select": [{
        "k": "AD",
        "v": "Active Directory"
      },
      {
        "k": "Choice",
        "v": "authChoice"
      },
      {
        "k": "DBI",
        "v": "Database (DBI)"
      },
      {
        "k": "Demo",
        "v": "Demonstration"
      },
      {
        "k": "LDAP",
        "v": "LDAP"
      },
      {
        "k": "Null",
        "v": "None"
      }],
      "title": "passwordDB",
      "type": "select",
      "data": "Demo"
    }],
    "nodes_cond": [{
      "_nodes": [{
        "default": 0,
        "id": "ADPwdMaxAge",
        "title": "ADPwdMaxAge",
        "type": "int"
      },
      {
        "default": 0,
        "id": "ADPwdExpireWarning",
        "title": "ADPwdExpireWarning",
        "type": "int"
      }],
      "help": "authad.html",
      "id": "adParams",
      "show": false,
      "title": "adParams"
    },
    {
      "_nodes": [{
        "default": "lmAuth",
        "id": "authChoiceParam",
        "title": "authChoiceParam"
      },
      {
        "cnodes": "authChoiceModules",
        "id": "authChoiceModules",
        "select": [
          [{
            "k": "Apache",
            "v": "Apache"
          },
          {
            "k": "AD",
            "v": "Active Directory"
          },
          {
            "k": "CAS",
            "v": "Central Authentication Service (CAS)"
          },
          {
            "k": "DBI",
            "v": "Database (DBI)"
          },
          {
            "k": "Demo",
            "v": "Demo"
          },
          {
            "k": "Facebook",
            "v": "Facebook"
          },
          {
            "k": "Google",
            "v": "Google"
          },
          {
            "k": "LDAP",
            "v": "LDAP"
          },
          {
            "k": "Null",
            "v": "None"
          },
          {
            "k": "OpenID",
            "v": "OpenID"
          },
          {
            "k": "OpenIDConnect",
            "v": "OpenID Connect"
          },
          {
            "k": "Proxy",
            "v": "Proxy"
          },
          {
            "k": "Radius",
            "v": "Radius"
          },
          {
            "k": "Remote",
            "v": "Remote"
          },
          {
            "k": "SAML",
            "v": "SAML v2"
          },
          {
            "k": "Slave",
            "v": "Slave"
          },
          {
            "k": "SSL",
            "v": "SSL"
          },
          {
            "k": "Twitter",
            "v": "Twitter"
          },
          {
            "k": "WebID",
            "v": "WebID"
          },
          {
            "k": "Yubikey",
            "v": "Yubikey"
          }],
          [{
            "k": "AD",
            "v": "Active Directory"
          },
          {
            "k": "DBI",
            "v": "Database (DBI)"
          },
          {
            "k": "Demo",
            "v": "Demo"
          },
          {
            "k": "Facebook",
            "v": "Facebook"
          },
          {
            "k": "Google",
            "v": "Google"
          },
          {
            "k": "LDAP",
            "v": "LDAP"
          },
          {
            "k": "Null",
            "v": "None"
          },
          {
            "k": "OpenID",
            "v": "OpenID"
          },
          {
            "k": "OpenIDConnect",
            "v": "OpenID Connect"
          },
          {
            "k": "Proxy",
            "v": "Proxy"
          },
          {
            "k": "Remote",
            "v": "Remote"
          },
          {
            "k": "SAML",
            "v": "SAML v2"
          },
          {
            "k": "Slave",
            "v": "Slave"
          },
          {
            "k": "WebID",
            "v": "WebID"
          }],
          [{
            "k": "AD",
            "v": "Active Directory"
          },
          {
            "k": "DBI",
            "v": "Database (DBI)"
          },
          {
            "k": "Demo",
            "v": "Demo"
          },
          {
            "k": "LDAP",
            "v": "LDAP"
          },
          {
            "k": "Null",
            "v": "None"
          }]],
        "title": "authChoiceModules",
        "type": "authChoiceContainer"
      }],
      "help": "authchoice.html",
      "id": "choiceParams",
      "show": false,
      "title": "choiceParams"
    },
    {
      "_nodes": [{
        "default": 4,
        "id": "apacheAuthnLevel",
        "title": "apacheAuthnLevel",
        "type": "int"
      }],
      "help": "authapache.html",
      "id": "apacheParams",
      "show": false,
      "title": "apacheParams",
      "type": "simpleInputContainer"
    },
    {
      "_nodes": [{
        "default": 1,
        "id": "CAS_authnLevel",
        "title": "CAS_authnLevel",
        "type": "int"
      },
      {
        "id": "CAS_url",
        "title": "CAS_url"
      },
      {
        "id": "CAS_CAFile",
        "title": "CAS_CAFile"
      },
      {
        "id": "CAS_renew",
        "title": "CAS_renew",
        "type": "bool"
      },
      {
        "id": "CAS_gateway",
        "title": "CAS_gateway",
        "type": "bool"
      },
      {
        "default": "/tmp/pgt.txt",
        "id": "CAS_pgtFile",
        "title": "CAS_pgtFile"
      },
      {
        "cnodes": "CAS_proxiedServices",
        "id": "CAS_proxiedServices",
        "title": "CAS_proxiedServices",
        "type": "keyTextContainer"
      }],
      "help": "authcas.html",
      "id": "casParams",
      "show": false,
      "title": "casParams"
    },
    {
      "_nodes": [{
        "default": 2,
        "id": "dbiAuthnLevel",
        "title": "dbiAuthnLevel",
        "type": "int"
      },
      {
        "cnodes": "dbiExportedVars",
        "default": [],
        "id": "dbiExportedVars",
        "title": "dbiExportedVars",
        "type": "keyTextContainer"
      },
      {
        "_nodes": [{
          "_nodes": [{
            "id": "dbiAuthChain",
            "title": "dbiAuthChain"
          },
          {
            "id": "dbiAuthUser",
            "title": "dbiAuthUser"
          },
          {
            "id": "dbiAuthPassword",
            "title": "dbiAuthPassword",
            "type": "password"
          }],
          "id": "dbiConnectionAuth",
          "title": "dbiConnectionAuth",
          "type": "simpleInputContainer"
        },
        {
          "_nodes": [{
            "id": "dbiUserChain",
            "title": "dbiUserChain"
          },
          {
            "id": "dbiUserUser",
            "title": "dbiUserUser"
          },
          {
            "id": "dbiUserPassword",
            "title": "dbiUserPassword",
            "type": "password"
          }],
          "id": "dbiConnectionUser",
          "title": "dbiConnectionUser",
          "type": "simpleInputContainer"
        }],
        "help": "authdbi.html#connection",
        "id": "dbiConnection",
        "title": "dbiConnection"
      },
      {
        "_nodes": [{
          "id": "dbiAuthTable",
          "title": "dbiAuthTable"
        },
        {
          "id": "dbiUserTable",
          "title": "dbiUserTable"
        },
        {
          "id": "dbiAuthLoginCol",
          "title": "dbiAuthLoginCol"
        },
        {
          "id": "dbiAuthPasswordCol",
          "title": "dbiAuthPasswordCol"
        },
        {
          "id": "dbiPasswordMailCol",
          "title": "dbiPasswordMailCol"
        },
        {
          "id": "userPivot",
          "title": "userPivot"
        }],
        "help": "authdbi.html#schema",
        "id": "dbiSchema",
        "title": "dbiSchema",
        "type": "simpleInputContainer"
      },
      {
        "_nodes": [{
          "help": "authdbi.html#password",
          "id": "dbiAuthPasswordHash",
          "title": "dbiAuthPasswordHash"
        }],
        "help": "authdbi.html#password",
        "id": "dbiPassword",
        "title": "dbiPassword",
        "type": "simpleInputContainer"
      }],
      "help": "authdbi.html",
      "id": "dbiParams",
      "show": true,
      "title": "dbiParams"
    },
    {
      "_nodes": [{
        "cnodes": "demoExportedVars",
        "default": [{
          "data": "cn",
          "id": "demoExportedVars/cn",
          "title": "cn",
          "type": "keyText"
        },
        {
          "data": "mail",
          "id": "demoExportedVars/mail",
          "title": "mail",
          "type": "keyText"
        },
        {
          "data": "uid",
          "id": "demoExportedVars/uid",
          "title": "uid",
          "type": "keyText"
        }],
        "id": "demoExportedVars",
        "title": "demoExportedVars",
        "type": "keyTextContainer"
      }],
      "help": "authdemo.html",
      "id": "demoParams",
      "show": true,
      "title": "demoParams"
    },
    {
      "_nodes": [{
        "default": 1,
        "id": "facebookAuthnLevel",
        "title": "facebookAuthnLevel",
        "type": "int"
      },
      {
        "cnodes": "facebookExportedVars",
        "default": [],
        "id": "facebookExportedVars",
        "title": "facebookExportedVars",
        "type": "keyTextContainer"
      },
      {
        "id": "facebookAppId",
        "title": "facebookAppId"
      },
      {
        "id": "facebookAppSecret",
        "title": "facebookAppSecret"
      }],
      "help": "authfacebook.html",
      "id": "facebookParams",
      "show": false,
      "title": "facebookParams"
    },
    {
      "_nodes": [{
        "default": 2,
        "id": "ldapAuthnLevel",
        "title": "ldapAuthnLevel",
        "type": "int"
      },
      {
        "cnodes": "ldapExportedVars",
        "default": [{
          "data": "cn",
          "id": "ldapExportedVars/cn",
          "title": "cn",
          "type": "keyText"
        },
        {
          "data": "mail",
          "id": "ldapExportedVars/mail",
          "title": "mail",
          "type": "keyText"
        },
        {
          "data": "uid",
          "id": "ldapExportedVars/uid",
          "title": "uid",
          "type": "keyText"
        }],
        "id": "ldapExportedVars",
        "title": "ldapExportedVars",
        "type": "keyTextContainer"
      },
      {
        "nodes": [{
          "default": "ldap://localhost",
          "id": "ldapServer",
          "title": "ldapServer",
	  "data": "ldap://192.168.1.1"
        },
        {
          "default": 389,
          "id": "ldapPort",
          "title": "ldapPort",
          "type": "int"
        },
        {
          "default": "dc=example,dc=com",
          "id": "ldapBase",
          "title": "ldapBase"
        },
        {
          "default": "",
          "id": "managerDn",
          "title": "managerDn"
        },
        {
          "default": "",
          "id": "managerPassword",
          "title": "managerPassword",
          "type": "password"
        },
        {
          "default": 120,
          "id": "ldapTimeout",
          "title": "ldapTimeout",
          "type": "int"
        },
        {
          "default": 3,
          "id": "ldapVersion",
          "title": "ldapVersion",
          "type": "int"
        },
        {
          "id": "ldapRaw",
          "title": "ldapRaw"
        }],
        "help": "authldap.html#connection",
        "id": "ldapConnection",
        "title": "ldapConnection",
        "type": "simpleInputContainer"
      },
      {
        "_nodes": [{
          "id": "LDAPFilter",
          "title": "LDAPFilter"
        },
        {
          "id": "AuthLDAPFilter",
          "title": "AuthLDAPFilter"
        },
        {
          "id": "mailLDAPFilter",
          "title": "mailLDAPFilter"
        },
        {
          "default": "find",
          "id": "ldapSearchDeref",
          "select": [{
            "k": "never",
            "v": "never"
          },
          {
            "k": "search",
            "v": "search"
          },
          {
            "k": "find",
            "v": "find"
          },
          {
            "k": "always",
            "v": "always"
          }],
          "title": "ldapSearchDeref",
          "type": "select"
        }],
        "help": "authldap.html#filters",
        "id": "ldapFilters",
        "title": "ldapFilters",
        "type": "simpleInputContainer"
      },
      {
        "_nodes": [{
          "id": "ldapGroupBase",
          "title": "ldapGroupBase"
        },
        {
          "default": "groupOfNames",
          "id": "ldapGroupObjectClass",
          "title": "ldapGroupObjectClass"
        },
        {
          "default": "member",
          "id": "ldapGroupAttributeName",
          "title": "ldapGroupAttributeName"
        },
        {
          "default": "dn",
          "id": "ldapGroupAttributeNameUser",
          "title": "ldapGroupAttributeNameUser"
        },
        {
          "default": "cn",
          "id": "ldapGroupAttributeNameSearch",
          "title": "ldapGroupAttributeNameSearch"
        },
        {
          "default": 0,
          "id": "ldapGroupRecursive",
          "title": "ldapGroupRecursive",
          "type": "bool"
        },
        {
          "default": "dn",
          "id": "ldapGroupAttributeNameGroup",
          "title": "ldapGroupAttributeNameGroup"
        }],
        "help": "authldap.html#groups",
        "id": "ldapGroups",
        "title": "ldapGroups",
        "type": "simpleInputContainer"
      },
      {
        "_nodes": [{
          "default": 0,
          "id": "ldapPpolicyControl",
          "title": "ldapPpolicyControl",
          "type": "bool"
        },
        {
          "default": 0,
          "id": "ldapSetPassword",
          "title": "ldapSetPassword",
          "type": "bool"
        },
        {
          "default": 0,
          "id": "ldapChangePasswordAsUser",
          "title": "ldapChangePasswordAsUser",
          "type": "bool"
        },
        {
          "default": "utf-8",
          "id": "ldapPwdEnc",
          "title": "ldapPwdEnc"
        },
        {
          "default": 1,
          "id": "ldapUsePasswordResetAttribute",
          "title": "ldapUsePasswordResetAttribute",
          "type": "bool"
        },
        {
          "default": "pwdReset",
          "id": "ldapPasswordResetAttribute",
          "title": "ldapPasswordResetAttribute"
        },
        {
          "default": "TRUE",
          "id": "ldapPasswordResetAttributeValue",
          "title": "ldapPasswordResetAttributeValue"
        },
        {
          "default": 0,
          "id": "ldapAllowResetExpiredPassword",
          "title": "ldapAllowResetExpiredPassword",
          "type": "bool"
        }],
        "help": "authldap.html#password",
        "id": "ldapPassword",
        "title": "ldapPassword",
        "type": "simpleInputContainer"
      }],
      "help": "authldap.html",
      "id": "ldapParams",
      "show": true,
      "title": "ldapParams"
    },
    {
      "help": "authcombination.html",
      "id": "combinationParams",
      "show": true,
      "title": "combinationParams",
      "nodes": [{
        "id": "combination",
        "title": "combination",
        "data": "[ldap] or [db]"
      },
      {
        "id": "combModules",
        "select": [{
          "k": "Apache",
          "v": "Apache"
        },
        {
          "k": "AD",
          "v": "Active Directory"
        },
        {
          "k": "DBI",
          "v": "Database (DBI)"
        },
        {
          "k": "Facebook",
          "v": "Facebook"
        },
        {
          "k": "Google",
          "v": "Google"
        },
        {
          "k": "LDAP",
          "v": "LDAP"
        },
        {
          "k": "Radius",
          "v": "Radius"
        },
        {
          "k": "SSL",
          "v": "SSL"
        },
        {
          "k": "Twitter",
          "v": "Twitter"
        },
        {
          "k": "WebID",
          "v": "WebID"
        },
        {
          "k": "Yubikey",
          "v": "Yubikey"
        },
        {
          "k": "Demo",
          "v": "Demonstration"
        },
        {
          "k": "CAS",
          "v": "Central Authentication Service (CAS)"
        },
        {
          "k": "OpenID",
          "v": "OpenID"
        },
        {
          "k": "OpenIDConnect",
          "v": "OpenID Connect"
        },
        {
          "k": "SAML",
          "v": "SAML v2"
        },
        {
          "k": "Proxy",
          "v": "Proxy"
        },
        {
          "k": "Remote",
          "v": "Remote"
        },
        {
          "k": "Slave",
          "v": "Slave"
        },
        {
          "k": "Null",
          "v": "None"
        }],
        "title": "combModules",
        "type": "cmbModuleContainer",
        "nodes": [{
          "id": "combModules/n1",
          "title": "ldap",
          "type": "cmbModule",
          "data": {
            "type": "LDAP",
            "for": 0,
            "over": []
          }
        },
        {
          "id": "combModules/n2",
          "title": "db",
          "type": "cmbModule",
          "data": {
            "type": "DBI",
            "for": 0,
            "over": []
          }
        }]
      }]
    },
    {
      "_nodes": [{
        "default": 2,
        "id": "nullAuthnLevel",
        "title": "nullAuthnLevel",
        "type": "int"
      }],
      "help": "authnull.html",
      "id": "nullParams",
      "show": false,
      "title": "nullParams",
      "type": "simpleInputContainer"
    },
    {
      "_nodes": [{
        "default": 1,
        "id": "openIdAuthnLevel",
        "title": "openIdAuthnLevel",
        "type": "int"
      },
      {
        "cnodes": "openIdExportedVars",
        "default": [],
        "id": "openIdExportedVars",
        "title": "openIdExportedVars",
        "type": "keyTextContainer"
      },
      {
        "id": "openIdSecret",
        "title": "openIdSecret"
      },
      {
        "default": "0;",
        "id": "openIdIDPList",
        "title": "openIdIDPList",
        "type": "blackWhiteList"
      }],
      "help": "authopenid.html",
      "id": "openidParams",
      "show": false,
      "title": "openidParams"
    },
    {
      "_nodes": [{
        "default": 1,
        "id": "oidcAuthnLevel",
        "title": "oidcAuthnLevel",
        "type": "int"
      },
      {
        "default": "openidconnectcallback",
        "id": "oidcRPCallbackGetParam",
        "title": "oidcRPCallbackGetParam"
      },
      {
        "default": 600,
        "id": "oidcRPStateTimeout",
        "title": "oidcRPStateTimeout",
        "type": "int"
      }],
      "help": "authopenidconnect.html",
      "id": "oidcParams",
      "show": false,
      "title": "oidcParams"
    },
    {
      "_nodes": [{
        "id": "proxyAuthService",
        "title": "proxyAuthService"
      },
      {
        "id": "proxySessionService",
        "title": "proxySessionService"
      },
      {
        "id": "remoteCookieName",
        "title": "remoteCookieName"
      },
      {
        "default": 2,
        "id": "proxyAuthnLevel",
        "title": "proxyAuthnLevel",
        "type": "int"
      },
      {
        "default": 0,
        "id": "proxyUseSoap",
        "title": "proxyUseSoap",
        "type": "bool"
      }],
      "help": "authproxy.html",
      "id": "proxyParams",
      "show": false,
      "title": "proxyParams",
      "type": "simpleInputContainer"
    },
    {
      "_nodes": [{
        "default": 3,
        "id": "radiusAuthnLevel",
        "title": "radiusAuthnLevel",
        "type": "int"
      },
      {
        "id": "radiusSecret",
        "title": "radiusSecret"
      },
      {
        "id": "radiusServer",
        "title": "radiusServer"
      }],
      "help": "authradius.html",
      "id": "radiusParams",
      "show": false,
      "title": "radiusParams",
      "type": "simpleInputContainer"
    },
    {
      "_nodes": [{
        "id": "remotePortal",
        "title": "remotePortal"
      },
      {
        "id": "remoteCookieName",
        "title": "remoteCookieName"
      },
      {
        "default": "Lemonldap::NG::Common::Apache::Session::SOAP",
        "id": "remoteGlobalStorage",
        "title": "remoteGlobalStorage"
      },
      {
        "cnodes": "remoteGlobalStorageOptions",
        "default": [{
          "data": "http://auth.example.com/Lemonldap/NG/Common/PSGI/SOAPService",
          "id": "remoteGlobalStorageOptions/ns",
          "title": "ns",
          "type": "keyText"
        },
        {
          "data": "http://auth.example.com/sessions",
          "id": "remoteGlobalStorageOptions/proxy",
          "title": "proxy",
          "type": "keyText"
        }],
        "id": "remoteGlobalStorageOptions",
        "title": "remoteGlobalStorageOptions",
        "type": "keyTextContainer"
      }],
      "help": "authremote.html",
      "id": "remoteParams",
      "show": false,
      "title": "remoteParams"
    },
    {
      "_nodes": [{
        "default": 2,
        "id": "slaveAuthnLevel",
        "title": "slaveAuthnLevel",
        "type": "int"
      },
      {
        "cnodes": "slaveExportedVars",
        "default": [],
        "id": "slaveExportedVars",
        "title": "slaveExportedVars",
        "type": "keyTextContainer"
      },
      {
        "id": "slaveUserHeader",
        "title": "slaveUserHeader"
      },
      {
        "id": "slaveMasterIP",
        "title": "slaveMasterIP"
      },
      {
        "id": "slaveHeaderName",
        "title": "slaveHeaderName"
      },
      {
        "id": "slaveHeaderContent",
        "title": "slaveHeaderContent"
      }],
      "help": "authslave.html",
      "id": "slaveParams",
      "show": false,
      "title": "slaveParams"
    },
    {
      "_nodes": [{
        "default": 5,
        "id": "SSLAuthnLevel",
        "title": "SSLAuthnLevel",
        "type": "int"
      },
      {
        "id": "SSLVar",
        "title": "SSLVar"
      }],
      "help": "authssl.html",
      "id": "sslParams",
      "show": false,
      "title": "sslParams",
      "type": "simpleInputContainer"
    },
    {
      "_nodes": [{
        "default": 1,
        "id": "twitterAuthnLevel",
        "title": "twitterAuthnLevel",
        "type": "int"
      },
      {
        "id": "twitterKey",
        "title": "twitterKey"
      },
      {
        "id": "twitterSecret",
        "title": "twitterSecret"
      },
      {
        "id": "twitterAppName",
        "title": "twitterAppName"
      }],
      "help": "authtwitter.html",
      "id": "twitterParams",
      "show": false,
      "title": "twitterParams",
      "type": "simpleInputContainer"
    },
    {
      "_nodes": [{
        "default": 1,
        "id": "webIDAuthnLevel",
        "title": "webIDAuthnLevel",
        "type": "int"
      },
      {
        "cnodes": "webIDExportedVars",
        "default": [],
        "id": "webIDExportedVars",
        "title": "webIDExportedVars",
        "type": "keyTextContainer"
      },
      {
        "id": "webIDWhitelist",
        "title": "webIDWhitelist"
      }],
      "help": "authwebid.html",
      "id": "webidParams",
      "show": false,
      "title": "webidParams"
    },
    {
      "_nodes": [{
        "default": 3,
        "id": "yubikeyAuthnLevel",
        "title": "yubikeyAuthnLevel",
        "type": "int"
      },
      {
        "id": "yubikeyClientID",
        "title": "yubikeyClientID"
      },
      {
        "id": "yubikeySecretKey",
        "title": "yubikeySecretKey"
      },
      {
        "default": 12,
        "id": "yubikeyPublicIDSize",
        "title": "yubikeyPublicIDSize",
        "type": "int"
      }],
      "help": "authyubikey.html",
      "id": "yubikeyParams",
      "show": false,
      "title": "yubikeyParams",
      "type": "simpleInputContainer"
    }]
  },
  {
    "_nodes": [{
      "_nodes": [{
        "default": 0,
        "id": "issuerDBSAMLActivation",
        "title": "issuerDBSAMLActivation",
        "type": "bool"
      },
      {
        "default": "^/saml/",
        "id": "issuerDBSAMLPath",
        "title": "issuerDBSAMLPath"
      },
      {
        "default": 1,
        "id": "issuerDBSAMLRule",
        "title": "issuerDBSAMLRule",
        "type": "boolOrExpr"
      }],
      "help": "idpsaml.html",
      "id": "issuerDBSAML",
      "title": "issuerDBSAML",
      "type": "simpleInputContainer"
    },
    {
      "_nodes": [{
        "default": 0,
        "id": "issuerDBCASActivation",
        "title": "issuerDBCASActivation",
        "type": "bool"
      },
      {
        "default": "^/cas/",
        "id": "issuerDBCASPath",
        "title": "issuerDBCASPath"
      },
      {
        "default": 1,
        "id": "issuerDBCASRule",
        "title": "issuerDBCASRule",
        "type": "boolOrExpr"
      },
      {
        "_nodes": [{
          "id": "casAttr",
          "title": "casAttr"
        },
        {
          "cnodes": "casAttributes",
          "id": "casAttributes",
          "title": "casAttributes",
          "type": "keyTextContainer"
        },
        {
          "default": "none",
          "id": "casAccessControlPolicy",
          "select": [{
            "k": "none",
            "v": "None"
          },
          {
            "k": "error",
            "v": "Display error on portal"
          },
          {
            "k": "faketicket",
            "v": "Send a fake service ticket"
          }],
          "title": "casAccessControlPolicy",
          "type": "select"
        },
        {
          "id": "casStorage",
          "title": "casStorage"
        },
        {
          "cnodes": "casStorageOptions",
          "id": "casStorageOptions",
          "title": "casStorageOptions",
          "type": "keyTextContainer"
        }],
        "id": "issuerDBCASOptions",
        "title": "issuerDBCASOptions"
      }],
      "help": "idpcas.html",
      "id": "issuerDBCAS",
      "title": "issuerDBCAS"
    },
    {
      "_nodes": [{
        "default": 0,
        "id": "issuerDBOpenIDActivation",
        "title": "issuerDBOpenIDActivation",
        "type": "bool"
      },
      {
        "default": "^/openidserver/",
        "id": "issuerDBOpenIDPath",
        "title": "issuerDBOpenIDPath"
      },
      {
        "default": 1,
        "id": "issuerDBOpenIDRule",
        "title": "issuerDBOpenIDRule",
        "type": "boolOrExpr"
      },
      {
        "_nodes": [{
          "id": "openIdIssuerSecret",
          "title": "openIdIssuerSecret"
        },
        {
          "id": "openIdAttr",
          "title": "openIdAttr"
        },
        {
          "default": "0;",
          "id": "openIdSPList",
          "title": "openIdSPList",
          "type": "blackWhiteList"
        },
        {
          "_nodes": [{
            "default": "cn",
            "id": "openIdSreg_fullname",
            "title": "openIdSreg_fullname"
          },
          {
            "default": "uid",
            "id": "openIdSreg_nickname",
            "title": "openIdSreg_nickname"
          },
          {
            "id": "openIdSreg_language",
            "title": "openIdSreg_language"
          },
          {
            "id": "openIdSreg_postcode",
            "title": "openIdSreg_postcode"
          },
          {
            "default": "_timezone",
            "id": "openIdSreg_timezone",
            "title": "openIdSreg_timezone"
          },
          {
            "id": "openIdSreg_country",
            "title": "openIdSreg_country"
          },
          {
            "id": "openIdSreg_gender",
            "title": "openIdSreg_gender"
          },
          {
            "default": "mail",
            "id": "openIdSreg_email",
            "title": "openIdSreg_email"
          },
          {
            "id": "openIdSreg_dob",
            "title": "openIdSreg_dob"
          }],
          "id": "openIdSreg",
          "title": "openIdSreg",
          "type": "simpleInputContainer"
        }],
        "id": "issuerDBOpenIDOptions",
        "title": "issuerDBOpenIDOptions"
      }],
      "help": "idpopenid.html",
      "id": "issuerDBOpenID",
      "title": "issuerDBOpenID"
    },
    {
      "_nodes": [{
        "default": "0",
        "id": "issuerDBOpenIDConnectActivation",
        "title": "issuerDBOpenIDConnectActivation",
        "type": "bool"
      },
      {
        "default": "^/oauth2/",
        "id": "issuerDBOpenIDConnectPath",
        "title": "issuerDBOpenIDConnectPath"
      },
      {
        "default": 1,
        "id": "issuerDBOpenIDConnectRule",
        "title": "issuerDBOpenIDConnectRule",
        "type": "boolOrExpr"
      }],
      "help": "idpopenidconnect.html",
      "id": "issuerDBOpenIDConnect",
      "title": "issuerDBOpenIDConnect"
    },
    {
      "_nodes": [{
        "default": "0",
        "id": "issuerDBGetActivation",
        "title": "issuerDBGetActivation",
        "type": "bool"
      },
      {
        "default": "^/get/",
        "id": "issuerDBGetPath",
        "title": "issuerDBGetPath"
      },
      {
        "default": 1,
        "id": "issuerDBGetRule",
        "title": "issuerDBGetRule",
        "type": "boolOrExpr"
      },
      {
        "default": [],
        "id": "issuerDBGetParameters",
        "title": "issuerDBGetParameters",
        "type": "doubleHash"
      }],
      "id": "issuerDBGet",
      "title": "issuerDBGet"
    }],
    "help": "start.html#identity_provider",
    "id": "issuerParams",
    "title": "issuerParams"
  },
  {
    "_nodes": [{
      "default": "uid",
      "id": "whatToTrace",
      "title": "whatToTrace"
    }, {
      "default": "_password",
      "id": "hiddenAttributes",
      "title": "hiddenAttributes"
    }],
    "help": "logs.html",
    "id": "logParams",
    "title": "logParams",
    "type": "simpleInputContainer"
  },
  {
    "_nodes": [{
      "default": "lemonldap",
      "id": "cookieName",
      "title": "cookieName"
    },
    {
      "default": "example.com",
      "id": "domain",
      "title": "domain",
      "data": "example.com"
    },
    {
      "default": 0,
      "id": "cda",
      "title": "cda",
      "type": "bool"
    },
    {
      "default": 0,
      "id": "securedCookie",
      "select": [{
        "k": "0",
        "v": "unsecuredCookie"
      },
      {
        "k": "1",
        "v": "securedCookie"
      },
      {
        "k": "2",
        "v": "doubleCookie"
      },
      {
        "k": "3",
        "v": "doubleCookieForSingleSession"
      }],
      "title": "securedCookie",
      "type": "select"
    },
    {
      "default": 1,
      "id": "httpOnly",
      "title": "httpOnly",
      "type": "bool"
    },
    {
      "id": "cookieExpiration",
      "title": "cookieExpiration"
    }],
    "help": "ssocookie.html",
    "id": "cookieParams",
    "title": "cookieParams",
    "type": "simpleInputContainer"
  },
  {
    "_nodes": [{
      "default": 0,
      "id": "storePassword",
      "title": "storePassword",
      "type": "bool"
    },
    {
      "default": 72000,
      "id": "timeout",
      "title": "timeout",
      "type": "int"
    },
    {
      "default": 0,
      "id": "timeoutActivity",
      "title": "timeoutActivity",
      "type": "int"
    },
    {
      "default": 60,
      "id": "timeoutActivityInterval",
      "title": "timeoutActivityInterval",
      "type": "int"
    },
    {
      "cnodes": "grantSessionRules",
      "id": "grantSessionRules",
      "title": "grantSessionRules",
      "type": "grantContainer"
    },
    {
      "_nodes": [{
        "default": "Apache::Session::File",
        "id": "globalStorage",
        "title": "globalStorage"
      },
      {
        "cnodes": "globalStorageOptions",
        "default": [{
          "data": "/var/lib/lemonldap-ng/sessions/",
          "id": "globalStorageOptions/Directory",
          "title": "Directory",
          "type": "keyText"
        },
        {
          "data": "t/sessions",
          "id": "globalStorageOptions/LockDirectory",
          "title": "LockDirectory",
          "type": "keyText"
        },
        {
          "data": "Lemonldap::NG::Common::Apache::Session::Generate::SHA256",
          "id": "globalStorageOptions/generateModule",
          "title": "generateModule",
          "type": "keyText"
        }],
        "id": "globalStorageOptions",
        "title": "globalStorageOptions",
        "type": "keyTextContainer"
      },
      {
        "default": "Cache::FileCache",
        "id": "localSessionStorage",
        "title": "localSessionStorage"
      },
      {
        "cnodes": "localSessionStorageOptions",
        "default": [{
          "data": 3,
          "id": "localSessionStorageOptions/cache_depth",
          "title": "cache_depth",
          "type": "keyText"
        },
        {
          "data": "/tmp",
          "id": "localSessionStorageOptions/cache_root",
          "title": "cache_root",
          "type": "keyText"
        },
        {
          "data": 600,
          "id": "localSessionStorageOptions/default_expires_in",
          "title": "default_expires_in",
          "type": "keyText"
        },
        {
          "data": "007",
          "id": "localSessionStorageOptions/directory_umask",
          "title": "directory_umask",
          "type": "keyText"
        },
        {
          "data": "lemonldap-ng-sessions",
          "id": "localSessionStorageOptions/namespace",
          "title": "namespace",
          "type": "keyText"
        }],
        "id": "localSessionStorageOptions",
        "title": "localSessionStorageOptions",
        "type": "keyTextContainer"
      }],
      "help": "start.html#sessions_database",
      "id": "sessionStorage",
      "title": "sessionStorage"
    },
    {
      "_nodes": [{
        "default": 0,
        "id": "singleSession",
        "title": "singleSession",
        "type": "bool"
      },
      {
        "default": 0,
        "id": "singleIP",
        "title": "singleIP",
        "type": "bool"
      },
      {
        "default": 0,
        "id": "singleUserByIP",
        "title": "singleUserByIP",
        "type": "bool"
      },
      {
        "default": 1,
        "id": "notifyDeleted",
        "title": "notifyDeleted",
        "type": "bool"
      },
      {
        "default": 0,
        "id": "notifyOther",
        "title": "notifyOther",
        "type": "bool"
      }],
      "id": "multipleSessions",
      "title": "multipleSessions",
      "type": "simpleInputContainer"
    },
    {
      "_nodes": [{
        "id": "persistentStorage",
        "title": "persistentStorage"
      },
      {
        "cnodes": "persistentStorageOptions",
        "id": "persistentStorageOptions",
        "title": "persistentStorageOptions",
        "type": "keyTextContainer"
      }],
      "id": "persistentSessions",
      "title": "persistentSessions"
    }],
    "help": "sessions.html",
    "id": "sessionParams",
    "title": "sessionParams"
  },
  {
    "cnodes": "reloadUrls",
    "help": "configlocation.html#configuration_reload",
    "id": "reloadUrls",
    "title": "reloadUrls",
    "type": "keyTextContainer"
  },
  {
    "_nodes": [{
      "id": "customFunctions",
      "title": "customFunctions"
    },
    {
      "default": 0,
      "id": "portalStatus",
      "title": "portalStatus",
      "type": "bool"
    },
    {
      "_nodes": [{
        "default": 0,
        "id": "restSessionServer",
        "title": "restSessionServer",
        "type": "bool"
      },
      {
        "default": 0,
        "id": "restConfigServer",
        "title": "restConfigServer",
        "type": "bool"
      },
      {
        "default": 0,
        "id": "soapSessionServer",
        "title": "soapSessionServer",
        "type": "bool"
      },
      {
        "default": 0,
        "id": "soapConfigServer",
        "title": "soapConfigServer",
        "type": "bool"
      },
      {
        "id": "exportedAttr",
        "title": "exportedAttr"
      }],
      "id": "portalServers",
      "title": "portalServers",
      "type": "simpleInputContainer"
    },
    {
      "_nodes": [{
        "default": 1,
        "id": "loginHistoryEnabled",
        "title": "loginHistoryEnabled",
        "type": "bool"
      },
      {
        "default": 5,
        "id": "successLoginNumber",
        "title": "successLoginNumber",
        "type": "int"
      },
      {
        "default": 5,
        "id": "failedLoginNumber",
        "title": "failedLoginNumber",
        "type": "int"
      },
      {
        "cnodes": "sessionDataToRemember",
        "id": "sessionDataToRemember",
        "title": "sessionDataToRemember",
        "type": "keyTextContainer"
      }],
      "help": "loginhistory.html",
      "id": "loginHistory",
      "title": "loginHistory"
    },
    {
      "_nodes": [{
        "default": 0,
        "id": "notification",
        "title": "notification",
        "type": "bool"
      },
      {
        "default": 0,
        "id": "oldNotifFormat",
        "title": "oldNotifFormat",
        "type": "bool"
      },
      {
        "default": "File",
        "id": "notificationStorage",
        "title": "notificationStorage"
      },
      {
        "cnodes": "notificationStorageOptions",
        "default": [{
          "data": "/var/lib/lemonldap-ng/notifications",
          "id": "notificationStorageOptions/dirName",
          "title": "dirName",
          "type": "keyText"
        }],
        "id": "notificationStorageOptions",
        "title": "notificationStorageOptions",
        "type": "keyTextContainer"
      },
      {
        "default": "allusers",
        "id": "notificationWildcard",
        "title": "notificationWildcard"
      },
      {
        "id": "notificationXSLTfile",
        "title": "notificationXSLTfile"
      }],
      "help": "notifications.html",
      "id": "notifications",
      "title": "notifications"
    },
    {
      "_nodes": [{
        "_nodes": [{
          "default": "",
          "id": "SMTPServer",
          "title": "SMTPServer"
        },
        {
          "id": "SMTPAuthUser",
          "title": "SMTPAuthUser"
        },
        {
          "id": "SMTPAuthPass",
          "title": "SMTPAuthPass",
          "type": "password"
        }],
        "id": "SMTP",
        "title": "SMTP",
        "type": "simpleInputContainer"
      },
      {
        "_nodes": [{
          "default": "noreply@example.com",
          "id": "mailFrom",
          "title": "mailFrom"
        },
        {
          "id": "mailReplyTo",
          "title": "mailReplyTo"
        },
        {
          "default": "utf-8",
          "id": "mailCharset",
          "title": "mailCharset"
        }],
        "id": "mailHeaders",
        "title": "mailHeaders",
        "type": "simpleInputContainer"
      },
      {
        "_nodes": [{
          "default": "",
          "id": "mailSubject",
          "title": "mailSubject"
        },
        {
          "id": "mailBody",
          "title": "mailBody",
          "type": "longtext"
        },
        {
          "default": "",
          "id": "mailConfirmSubject",
          "title": "mailConfirmSubject"
        },
        {
          "id": "mailConfirmBody",
          "title": "mailConfirmBody",
          "type": "longtext"
        }],
        "id": "mailContent",
        "title": "mailContent",
        "type": "simpleInputContainer"
      },
      {
        "_nodes": [{
          "default": "http://auth.example.com/resetpwd",
          "id": "mailUrl",
          "title": "mailUrl"
        },
        {
          "default": "[A-Z]{3}[a-z]{5}.\\d{2}",
          "id": "randomPasswordRegexp",
          "title": "randomPasswordRegexp"
        },
        {
          "default": 0,
          "id": "mailTimeout",
          "title": "mailTimeout",
          "type": "int"
        },
        {
          "default": "mail",
          "id": "mailSessionKey",
          "title": "mailSessionKey"
        }],
        "id": "mailOther",
        "title": "mailOther",
        "type": "simpleInputContainer"
      }],
      "help": "resetpassword.html",
      "id": "passwordManagement",
      "title": "passwordManagement"
    },
    {
      "_nodes": [{
        "default": "Null",
        "id": "registerDB",
        "select": [{
          "k": "AD",
          "v": "Active Directory"
        },
        {
          "k": "Demo",
          "v": "Demonstration"
        },
        {
          "k": "LDAP",
          "v": "LDAP"
        },
        {
          "k": "Null",
          "v": "None"
        }],
        "title": "registerDB",
        "type": "select"
      },
      {
        "default": 0,
        "id": "registerTimeout",
        "title": "registerTimeout",
        "type": "int"
      },
      {
        "default": "",
        "id": "registerConfirmSubject",
        "title": "registerConfirmSubject"
      },
      {
        "default": "",
        "id": "registerDoneSubject",
        "title": "registerDoneSubject"
      }],
      "help": "register.html",
      "id": "register",
      "title": "register",
      "type": "simpleInputContainer"
    },
    {
      "_nodes": [{
        "default": 0,
        "id": "u2fActivation",
        "title": "u2fActivation",
        "type": "bool"
      },
      {
        "default": 0,
        "id": "u2fSelfRegistration",
        "title": "u2fSelfRegistration",
        "type": "bool"
      }],
      "id": "u2f",
      "title": "u2f",
      "type": "simpleInputContainer"
    },
    {
      "_nodes": [{
        "default": "^[\\w\\.\\-@]+$",
        "id": "userControl",
        "title": "userControl"
      },
      {
        "default": 5,
        "id": "portalForceAuthnInterval",
        "title": "portalForceAuthnInterval",
        "type": "int"
      },
      {
        "id": "key",
        "title": "key",
        "type": "password"
      },
      {
        "id": "trustedDomains",
        "title": "trustedDomains"
      },
      {
        "default": 1,
        "id": "useSafeJail",
        "title": "useSafeJail",
        "type": "bool"
      },
      {
        "default": 1,
        "id": "checkXSS",
        "title": "checkXSS",
        "type": "bool"
      },
      {
        "cnodes": "lwpSslOpts",
        "id": "lwpSslOpts",
        "title": "lwpSslOpts",
        "type": "keyTextContainer"
      },
      {
        "_nodes": [{
          "default": "'self'",
          "id": "cspDefault",
          "title": "cspDefault"
        },
        {
          "default": "'self'",
          "id": "cspImg",
          "title": "cspImg"
        },
        {
          "default": "'self'",
          "id": "cspScript",
          "title": "cspScript"
        },
        {
          "default": "'self'",
          "id": "cspStyle",
          "title": "cspStyle"
        },
        {
          "default": "'self'",
          "id": "cspConnect",
          "title": "cspConnect"
        },
        {
          "default": "'self'",
          "id": "cspFont",
          "title": "cspFont"
        }],
        "help": "csp.html",
        "id": "contentSecurityPolicy",
        "title": "contentSecurityPolicy",
        "type": "simpleInputContainer"
      },
      {
        "default": 1,
        "id": "requireToken",
        "title": "requireToken",
        "type": "bool"
      },
      {
        "default": 120,
        "id": "formTimeout",
        "title": "formTimeout",
        "type": "int"
      }],
      "help": "security.html#configure_security_settings",
      "id": "security",
      "title": "security",
      "type": "simpleInputContainer"
    },
    {
      "_nodes": [{
        "id": "https",
        "default": -1,
        "title": "https",
        "type": "trool"
      },
      {
        "id": "port",
        "default": -1,
        "title": "port",
        "type": "int"
      },
      {
        "default": 0,
        "id": "useRedirectOnForbidden",
        "title": "useRedirectOnForbidden",
        "type": "bool"
      },
      {
        "default": 1,
        "id": "useRedirectOnError",
        "title": "useRedirectOnError",
        "type": "bool"
      },
      {
        "default": 0,
        "id": "maintenance",
        "title": "maintenance",
        "type": "bool"
      }],
      "help": "redirections.html",
      "id": "redirection",
      "title": "redirection",
      "type": "simpleInputContainer"
    },
    {
      "_nodes": [{
        "default": 0,
        "id": "jsRedirect",
        "title": "jsRedirect",
        "type": "boolOrExpr"
      },
      {
        "default": 0,
        "id": "noAjaxHook",
        "title": "noAjaxHook",
        "type": "bool"
      }],
      "help": "redirections.html#portal_redirections",
      "id": "portalRedirection",
      "title": "portalRedirection",
      "type": "simpleInputContainer"
    },
    {
      "cnodes": "nginxCustomHandlers",
      "id": "nginxCustomHandlers",
      "title": "nginxCustomHandlers",
      "type": "keyTextContainer"
    },
    {
      "cnodes": "logoutServices",
      "default": [],
      "help": "logoutforward.html",
      "id": "logoutServices",
      "title": "logoutServices",
      "type": "keyTextContainer"
    },
    {
      "default": "; ",
      "id": "multiValuesSeparator",
      "title": "multiValuesSeparator",
      "type": "authParamsText"
    },
    {
      "_nodes": [{
        "default": "get",
        "id": "infoFormMethod",
        "select": [{
          "k": "get",
          "v": "GET"
        },
        {
          "k": "post",
          "v": "POST"
        }],
        "title": "infoFormMethod",
        "type": "select"
      },
      {
        "default": "post",
        "id": "confirmFormMethod",
        "select": [{
          "k": "get",
          "v": "GET"
        },
        {
          "k": "post",
          "v": "POST"
        }],
        "title": "confirmFormMethod",
        "type": "select"
      },
      {
        "default": "get",
        "id": "redirectFormMethod",
        "select": [{
          "k": "get",
          "v": "GET"
        },
        {
          "k": "post",
          "v": "POST"
        }],
        "title": "redirectFormMethod",
        "type": "select"
      },
      {
        "default": 1,
        "id": "activeTimer",
        "title": "activeTimer",
        "type": "bool"
      }],
      "id": "forms",
      "title": "forms"
    }],
    "help": "start.html#advanced_features",
    "id": "advancedParams",
    "title": "advancedParams"
  }]
},
{
  "_nodes": [{
    "cnodes": "exportedVars",
    "default": [],
    "help": "exportedvars.html",
    "id": "exportedVars",
    "title": "exportedVars",
    "type": "keyTextContainer"
  },
  {
    "cnodes": "macros",
    "default": [],
    "help": "exportedvars.html#extend_variables_using_macros_and_groups",
    "id": "macros",
    "title": "macros",
    "type": "keyTextContainer"
  },
  {
    "cnodes": "groups",
    "default": [],
    "help": "exportedvars.html#extend_variables_using_macros_and_groups",
    "id": "groups",
    "title": "groups",
    "type": "keyTextContainer"
  }],
  "id": "variables",
  "title": "variables"
},
{
  "cnodes": "virtualHosts",
  "help": "configvhost.html",
  "id": "virtualHosts",
  "template": "virtualHost",
  "title": "virtualHosts",
  "type": "virtualHostContainer"
},
{
  "_nodes": [{
    "default": "#PORTAL#/saml/metadata",
    "id": "samlEntityID",
    "title": "samlEntityID"
  },
  {
    "_nodes": [{
      "get": ["samlServicePrivateKeySig", "samlServicePrivateKeySigPwd", "samlServicePublicKeySig"],
      "id": "samlServiceSecuritySig",
      "title": "samlServiceSecuritySig",
      "type": "RSAKey"
    },
    {
      "get": ["samlServicePrivateKeyEnc", "samlServicePrivateKeyEncPwd", "samlServicePublicKeyEnc"],
      "id": "samlServiceSecurityEnc",
      "title": "samlServiceSecurityEnc",
      "type": "RSAKey"
    },
    {
      "default": 0,
      "id": "samlServiceUseCertificateInResponse",
      "title": "samlServiceUseCertificateInResponse",
      "type": "bool"
    }],
    "help": "samlservice.html#security_parameters",
    "id": "samlServiceSecurity",
    "title": "samlServiceSecurity"
  },
  {
    "_nodes": [{
      "default": "mail",
      "id": "samlNameIDFormatMapEmail",
      "title": "samlNameIDFormatMapEmail"
    },
    {
      "default": "mail",
      "id": "samlNameIDFormatMapX509",
      "title": "samlNameIDFormatMapX509"
    },
    {
      "default": "uid",
      "id": "samlNameIDFormatMapWindows",
      "title": "samlNameIDFormatMapWindows"
    },
    {
      "default": "uid",
      "id": "samlNameIDFormatMapKerberos",
      "title": "samlNameIDFormatMapKerberos"
    }],
    "help": "samlservice.html#nameid_formats",
    "id": "samlNameIDFormatMap",
    "title": "samlNameIDFormatMap",
    "type": "simpleInputContainer"
  },
  {
    "_nodes": [{
      "default": 2,
      "id": "samlAuthnContextMapPassword",
      "title": "samlAuthnContextMapPassword",
      "type": "int"
    },
    {
      "default": 3,
      "id": "samlAuthnContextMapPasswordProtectedTransport",
      "title": "samlAuthnContextMapPasswordProtectedTransport",
      "type": "int"
    },
    {
      "default": 5,
      "id": "samlAuthnContextMapTLSClient",
      "title": "samlAuthnContextMapTLSClient",
      "type": "int"
    },
    {
      "default": 4,
      "id": "samlAuthnContextMapKerberos",
      "title": "samlAuthnContextMapKerberos",
      "type": "int"
    }],
    "help": "samlservice.html#authentication_contexts",
    "id": "samlAuthnContextMap",
    "title": "samlAuthnContextMap",
    "type": "simpleInputContainer"
  },
  {
    "_nodes": [{
      "default": "Example",
      "id": "samlOrganizationDisplayName",
      "title": "samlOrganizationDisplayName"
    },
    {
      "default": "Example",
      "id": "samlOrganizationName",
      "title": "samlOrganizationName"
    },
    {
      "default": "http://www.example.com",
      "id": "samlOrganizationURL",
      "title": "samlOrganizationURL"
    }],
    "help": "samlservice.html#organization",
    "id": "samlOrganization",
    "title": "samlOrganization",
    "type": "simpleInputContainer"
  },
  {
    "_nodes": [{
      "default": 1,
      "id": "samlSPSSODescriptorAuthnRequestsSigned",
      "title": "samlSPSSODescriptorAuthnRequestsSigned",
      "type": "bool"
    },
    {
      "default": 1,
      "id": "samlSPSSODescriptorWantAssertionsSigned",
      "title": "samlSPSSODescriptorWantAssertionsSigned",
      "type": "bool"
    },
    {
      "_nodes": [{
        "default": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect;#PORTAL#/saml/proxySingleLogout;#PORTAL#/saml/proxySingleLogoutReturn",
        "id": "samlSPSSODescriptorSingleLogoutServiceHTTPRedirect",
        "title": "samlSPSSODescriptorSingleLogoutServiceHTTPRedirect",
        "type": "samlService"
      },
      {
        "default": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST;#PORTAL#/saml/proxySingleLogout;#PORTAL#/saml/proxySingleLogoutReturn",
        "id": "samlSPSSODescriptorSingleLogoutServiceHTTPPost",
        "title": "samlSPSSODescriptorSingleLogoutServiceHTTPPost",
        "type": "samlService"
      },
      {
        "default": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP;#PORTAL#/saml/proxySingleLogoutSOAP;",
        "id": "samlSPSSODescriptorSingleLogoutServiceSOAP",
        "title": "samlSPSSODescriptorSingleLogoutServiceSOAP",
        "type": "samlService"
      }],
      "id": "samlSPSSODescriptorSingleLogoutService",
      "title": "samlSPSSODescriptorSingleLogoutService"
    },
    {
      "_nodes": [{
        "default": "0;1;urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact;#PORTAL#/saml/proxySingleSignOnArtifact",
        "id": "samlSPSSODescriptorAssertionConsumerServiceHTTPArtifact",
        "title": "samlSPSSODescriptorAssertionConsumerServiceHTTPArtifact",
        "type": "samlAssertion"
      },
      {
        "default": "1;0;urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST;#PORTAL#/saml/proxySingleSignOnPost",
        "id": "samlSPSSODescriptorAssertionConsumerServiceHTTPPost",
        "title": "samlSPSSODescriptorAssertionConsumerServiceHTTPPost",
        "type": "samlAssertion"
      }],
      "id": "samlSPSSODescriptorAssertionConsumerService",
      "title": "samlSPSSODescriptorAssertionConsumerService"
    },
    {
      "_nodes": [{
        "default": "1;0;urn:oasis:names:tc:SAML:2.0:bindings:SOAP;#PORTAL#/saml/artifact",
        "id": "samlSPSSODescriptorArtifactResolutionServiceArtifact",
        "title": "samlSPSSODescriptorArtifactResolutionServiceArtifact",
        "type": "samlAssertion"
      }],
      "id": "samlSPSSODescriptorArtifactResolutionService",
      "title": "samlSPSSODescriptorArtifactResolutionService"
    }],
    "help": "samlservice.html#service_provider",
    "id": "samlSPSSODescriptor",
    "title": "samlSPSSODescriptor"
  },
  {
    "_nodes": [{
      "default": 1,
      "id": "samlIDPSSODescriptorWantAuthnRequestsSigned",
      "title": "samlIDPSSODescriptorWantAuthnRequestsSigned",
      "type": "bool"
    },
    {
      "_nodes": [{
        "default": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect;#PORTAL#/saml/singleSignOn;",
        "id": "samlIDPSSODescriptorSingleSignOnServiceHTTPRedirect",
        "title": "samlIDPSSODescriptorSingleSignOnServiceHTTPRedirect",
        "type": "samlService"
      },
      {
        "default": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST;#PORTAL#/saml/singleSignOn;",
        "id": "samlIDPSSODescriptorSingleSignOnServiceHTTPPost",
        "title": "samlIDPSSODescriptorSingleSignOnServiceHTTPPost",
        "type": "samlService"
      },
      {
        "default": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact;#PORTAL#/saml/singleSignOnArtifact;",
        "id": "samlIDPSSODescriptorSingleSignOnServiceHTTPArtifact",
        "title": "samlIDPSSODescriptorSingleSignOnServiceHTTPArtifact",
        "type": "samlService"
      }],
      "id": "samlIDPSSODescriptorSingleSignOnService",
      "title": "samlIDPSSODescriptorSingleSignOnService"
    },
    {
      "_nodes": [{
        "default": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect;#PORTAL#/saml/singleLogout;#PORTAL#/saml/singleLogoutReturn",
        "id": "samlIDPSSODescriptorSingleLogoutServiceHTTPRedirect",
        "title": "samlIDPSSODescriptorSingleLogoutServiceHTTPRedirect",
        "type": "samlService"
      },
      {
        "default": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST;#PORTAL#/saml/singleLogout;#PORTAL#/saml/singleLogoutReturn",
        "id": "samlIDPSSODescriptorSingleLogoutServiceHTTPPost",
        "title": "samlIDPSSODescriptorSingleLogoutServiceHTTPPost",
        "type": "samlService"
      },
      {
        "default": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP;#PORTAL#/saml/singleLogoutSOAP;",
        "id": "samlIDPSSODescriptorSingleLogoutServiceSOAP",
        "title": "samlIDPSSODescriptorSingleLogoutServiceSOAP",
        "type": "samlService"
      }],
      "id": "samlIDPSSODescriptorSingleLogoutService",
      "title": "samlIDPSSODescriptorSingleLogoutService"
    },
    {
      "_nodes": [{
        "default": "1;0;urn:oasis:names:tc:SAML:2.0:bindings:SOAP;#PORTAL#/saml/artifact",
        "id": "samlIDPSSODescriptorArtifactResolutionServiceArtifact",
        "title": "samlIDPSSODescriptorArtifactResolutionServiceArtifact",
        "type": "samlAssertion"
      }],
      "id": "samlIDPSSODescriptorArtifactResolutionService",
      "title": "samlIDPSSODescriptorArtifactResolutionService"
    }],
    "help": "samlservice.html#identity_provider",
    "id": "samlIDPSSODescriptor",
    "title": "samlIDPSSODescriptor"
  },
  {
    "_nodes": [{
      "_nodes": [{
        "default": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP;#PORTAL#/saml/AA/SOAP;",
        "id": "samlAttributeAuthorityDescriptorAttributeServiceSOAP",
        "title": "samlAttributeAuthorityDescriptorAttributeServiceSOAP",
        "type": "samlService"
      }],
      "id": "samlAttributeAuthorityDescriptorAttributeService",
      "title": "samlAttributeAuthorityDescriptorAttributeService"
    }],
    "help": "samlservice.html#attribute_authority",
    "id": "samlAttributeAuthorityDescriptor",
    "title": "samlAttributeAuthorityDescriptor"
  },
  {
    "_nodes": [{
      "default": 1,
      "id": "samlMetadataForceUTF8",
      "title": "samlMetadataForceUTF8",
      "type": "bool"
    },
    {
      "id": "samlStorage",
      "title": "samlStorage"
    },
    {
      "cnodes": "samlStorageOptions",
      "id": "samlStorageOptions",
      "title": "samlStorageOptions",
      "type": "keyTextContainer"
    },
    {
      "default": 600,
      "id": "samlRelayStateTimeout",
      "title": "samlRelayStateTimeout",
      "type": "int"
    },
    {
      "default": 0,
      "id": "samlUseQueryStringSpecific",
      "title": "samlUseQueryStringSpecific",
      "type": "bool"
    },
    {
      "_nodes": [{
        "default": 0,
        "id": "samlCommonDomainCookieActivation",
        "title": "samlCommonDomainCookieActivation",
        "type": "bool"
      },
      {
        "id": "samlCommonDomainCookieDomain",
        "title": "samlCommonDomainCookieDomain"
      },
      {
        "id": "samlCommonDomainCookieReader",
        "title": "samlCommonDomainCookieReader"
      },
      {
        "id": "samlCommonDomainCookieWriter",
        "title": "samlCommonDomainCookieWriter"
      }],
      "id": "samlCommonDomainCookie",
      "title": "samlCommonDomainCookie",
      "type": "simpleInputContainer"
    }],
    "help": "samlservice.html#advanced",
    "id": "samlAdvanced",
    "title": "samlAdvanced"
  }],
  "help": "samlservice.html",
  "id": "samlServiceMetaData",
  "title": "samlServiceMetaData"
},
{
  "cnodes": "samlIDPMetaDataNodes",
  "id": "samlIDPMetaDataNodes",
  "template": "samlIDPMetaDataNode",
  "title": "samlIDPMetaDataNodes",
  "type": "samlIDPMetaDataNodeContainer"
},
{
  "cnodes": "samlSPMetaDataNodes",
  "help": "authsaml.html",
  "id": "samlSPMetaDataNodes",
  "template": "samlSPMetaDataNode",
  "title": "samlSPMetaDataNodes",
  "type": "samlSPMetaDataNodeContainer"
},
{
  "_nodes": [{
    "default": "http://auth.example.com",
    "id": "oidcServiceMetaDataIssuer",
    "title": "oidcServiceMetaDataIssuer"
  },
  {
    "_nodes": [{
      "default": "authorize",
      "id": "oidcServiceMetaDataAuthorizeURI",
      "title": "oidcServiceMetaDataAuthorizeURI"
    },
    {
      "default": "token",
      "id": "oidcServiceMetaDataTokenURI",
      "title": "oidcServiceMetaDataTokenURI"
    },
    {
      "default": "userinfo",
      "id": "oidcServiceMetaDataUserInfoURI",
      "title": "oidcServiceMetaDataUserInfoURI"
    },
    {
      "default": "jwks",
      "id": "oidcServiceMetaDataJWKSURI",
      "title": "oidcServiceMetaDataJWKSURI"
    },
    {
      "default": "register",
      "id": "oidcServiceMetaDataRegistrationURI",
      "title": "oidcServiceMetaDataRegistrationURI"
    },
    {
      "default": "logout",
      "id": "oidcServiceMetaDataEndSessionURI",
      "title": "oidcServiceMetaDataEndSessionURI"
    },
    {
      "default": "checksession.html",
      "id": "oidcServiceMetaDataCheckSessionURI",
      "title": "oidcServiceMetaDataCheckSessionURI"
    }],
    "id": "oidcServiceMetaDataEndPoints",
    "title": "oidcServiceMetaDataEndPoints",
    "type": "simpleInputContainer"
  },
  {
    "cnodes": "oidcServiceMetaDataAuthnContext",
    "default": [{
      "data": 1,
      "id": "oidcServiceMetaDataAuthnContext/loa-1",
      "title": "loa-1",
      "type": "keyText"
    },
    {
      "data": 2,
      "id": "oidcServiceMetaDataAuthnContext/loa-2",
      "title": "loa-2",
      "type": "keyText"
    },
    {
      "data": 3,
      "id": "oidcServiceMetaDataAuthnContext/loa-3",
      "title": "loa-3",
      "type": "keyText"
    },
    {
      "data": 4,
      "id": "oidcServiceMetaDataAuthnContext/loa-4",
      "title": "loa-4",
      "type": "keyText"
    },
    {
      "data": 5,
      "id": "oidcServiceMetaDataAuthnContext/loa-5",
      "title": "loa-5",
      "type": "keyText"
    }],
    "id": "oidcServiceMetaDataAuthnContext",
    "title": "oidcServiceMetaDataAuthnContext",
    "type": "keyTextContainer"
  },
  {
    "_nodes": [{
      "get": ["oidcServicePrivateKeySig", "oidcServicePublicKeySig"],
      "id": "oidcServiceMetaDataKeys",
      "title": "oidcServiceMetaDataKeys",
      "type": "RSAKeyNoPassword"
    },
    {
      "id": "oidcServiceKeyIdSig",
      "title": "oidcServiceKeyIdSig"
    },
    {
      "default": "0",
      "id": "oidcServiceAllowDynamicRegistration",
      "title": "oidcServiceAllowDynamicRegistration",
      "type": "bool"
    },
    {
      "default": "1",
      "id": "oidcServiceAllowAuthorizationCodeFlow",
      "title": "oidcServiceAllowAuthorizationCodeFlow",
      "type": "bool"
    },
    {
      "default": "0",
      "id": "oidcServiceAllowImplicitFlow",
      "title": "oidcServiceAllowImplicitFlow",
      "type": "bool"
    },
    {
      "default": "0",
      "id": "oidcServiceAllowHybridFlow",
      "title": "oidcServiceAllowHybridFlow",
      "type": "bool"
    }],
    "id": "oidcServiceMetaDataSecurity",
    "title": "oidcServiceMetaDataSecurity"
  },
  {
    "_nodes": [{
      "id": "oidcStorage",
      "title": "oidcStorage"
    },
    {
      "cnodes": "oidcStorageOptions",
      "id": "oidcStorageOptions",
      "title": "oidcStorageOptions",
      "type": "keyTextContainer"
    }],
    "id": "oidcServiceMetaDataSessions",
    "title": "oidcServiceMetaDataSessions"
  }],
  "help": "openidconnectservice.html#service_configuration",
  "id": "oidcServiceMetaData",
  "title": "oidcServiceMetaData"
},
{
  "cnodes": "oidcOPMetaDataNodes",
  "help": "authopenidconnect.html#declare_the_openid_connect_provider_in_llng",
  "id": "oidcOPMetaDataNodes",
  "title": "oidcOPMetaDataNodes",
  "type": "oidcOPMetaDataNodeContainer"
},
{
  "cnodes": "oidcRPMetaDataNodes",
  "help": "idpopenidconnect.html#configuration_of_relying_party_in_llng",
  "id": "oidcRPMetaDataNodes",
  "title": "oidcRPMetaDataNodes",
  "type": "oidcRPMetaDataNodeContainer"
},
{
  "id": "cfgLog",
  "title": "cfgLog",
  "data": "Combination test"
}]

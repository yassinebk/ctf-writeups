# coding: utf-8
import hashlib
from django.conf import settings
from django.utils.translation import get_language
from django.utils.timezone import get_current_timezone_name
from django.utils.encoding import iri_to_uri

# 项目源码的 settings
import src.app.settings

settings.configure(src.app.settings)


def _i18n_cache_key_suffix(cache_key):
    """If necessary, add the current locale or time zone to the cache key."""
    if settings.USE_I18N or settings.USE_L10N:
        # first check if LocaleMiddleware or another middleware added
        # LANGUAGE_CODE to request, then fall back to the active language
        # which in turn can also fall back to settings.LANGUAGE_CODE
        # cache_key += '.%s' % getattr(request, 'LANGUAGE_CODE', get_language())
        cache_key += ".%s" % get_language()
    if settings.USE_TZ:
        cache_key += ".%s" % get_current_timezone_name()
    return cache_key


def _generate_cache_header_key(uri):
    # 默认是空
    key_prefix = ""
    """Return a cache key for the header cache."""
    url = hashlib.md5(iri_to_uri(uri).encode("ascii"))
    cache_key = "views.decorators.cache.cache_header.%s.%s" % (
        key_prefix,
        url.hexdigest(),
    )
    return _i18n_cache_key_suffix(cache_key)


def _generate_cache_key(uri, method):
    # 默认是空
    key_prefix = ""
    """Return a cache key for the header cache."""
    url = hashlib.md5(iri_to_uri(uri).encode("ascii"))
    cache_key = "views.decorators.cache.cache_page.%s.%s.%s.%s" % (
        key_prefix,
        method,
        url.hexdigest(),
        hashlib.md5().hexdigest(),
    )
    return _i18n_cache_key_suffix(cache_key)


def make_key(k):
    # 默认是 1
    version = 1
    return "%s:%s:%s" % ("", version, k)


request_uri = "http://15.236.210.121:8000/index"

cache_header_key = make_key(_generate_cache_header_key(request_uri))
print("".join([hashlib.md5(cache_header_key.encode()).hexdigest(), ".djcache"]))

# method 对应 url 请求方法 GET POST等
cache_key = make_key(_generate_cache_key(request_uri, "GET"))
print("".join([hashlib.md5(cache_key.encode()).hexdigest(), ".djcache"]))
